!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},t=(new e.Error).stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="7492ab14-cae8-4856-b6fd-d13bcaaf1351",e._sentryDebugIdIdentifier="sentry-dbid-7492ab14-cae8-4856-b6fd-d13bcaaf1351")}catch(e){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4866],{1176:(e,t,_)=>{_.d(t,{r4:()=>N}),_(56203);var r=_(30116),n=_(58510),i=_(86873),o=_(70322),a=_(12369);let{app:{environment:E}}=_(69799).A,c=new r._(a.d),s={};async function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;try{let t=new n.d({SecretId:e}),_=await c.send(t);return(null==_?void 0:_.SecretString)||null}catch(_){if(t<3)return await (0,o.y)(1e3*2**t),T(e,t+1);return null}}async function u(e){try{let t=Date.now(),_=s[e];if(_&&_.expiration>t)return _.value;let r=await T(e);return s[e]={value:r||void 0,expiration:t+6e5},r}catch(e){return null}}function O(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1];return async function(){try{let _=await u("".concat("production"===E?"PROD":"DEV","_PLATFORM_").concat(e));if(_)return t?JSON.parse(_):_;return{}}catch(_){let t=_ instanceof Error&&_.name||"UnknownError";throw Error("Error retrieving secret ".concat(e,": ").concat(t))}}}async function N(e){try{let t="".concat("production"===E?"PROD":"DEV","_ORG_").concat(e,"_KEY"),_=await u(t);return _?JSON.parse(_):null}catch(t){let e=t instanceof Error&&t.name||"UnknownError";return(0,i.vV)("Error retrieving org secret.",e),null}}O("ADMIN_API_KEYS"),O("FIREBASE_SECRETS"),O("GITHUB_SECRETS"),O("GITLAB_SECRETS"),O("SLACK_SECRETS"),O("LINEAR_SECRETS"),O("JIRA_SECRETS"),O("CONFLUENCE_SECRETS"),O("STRIPE_SECRETS"),O("ORB_SECRETS"),O("SENDGRID_SECRETS"),O("WORKOS_SECRETS"),O("ENCRYPTION_KEYS"),O("GOOGLE_SECRETS"),O("GOOGLE_VERTEXAI_CREDENTIALS"),O("VOYAGE_API_KEY"),O("CRON_SECRET",!1),O("ZOEKT_API_KEY",!1),O("E2B_API_KEY",!1),O("MONGODB_READONLY_USERNAME",!1),O("MONGODB_READONLY_PASSWORD",!1),O("NEXTAUTH_SECRET",!1),O("STATSIG_SERVER_SECRET",!1),O("OPEN_AI_API_KEY",!1),O("XAI_API_KEY",!1),O("CRUCIBLE_API_KEY",!1),O("ANTHROPIC_API_KEY",!1),O("FIRECRAWL_API_KEY",!1),O("NOTION_AUTH_SECRETS"),O("SENTRY_AUTH_SECRETS"),O("PAGERDUTY_AUTH_SECRETS"),O("EXA_API_KEY",!1),O("BRIDGE_TOKEN_SIGNING_KEYS"),O("LANGSMITH_API_KEY",!1),O("LANGSMITH_ENDPOINT",!1),O("CODESANDBOX_KEY")},4923:(e,t,_)=>{_.d(t,{F:()=>o});var r=_(45874),n=_(91161),i=_(68617);async function o(e,t,_,o){if(!t)throw new i.m("Bridge instance ID not available.");if(!_)throw new i.m("Pairing code not available.");try{let i=await (0,n.I)({sessionId:o||"",bridgeInstanceId:t,pairingCode:_}),a=new URL("http://localhost:".concat(r.uM).concat(r.bf)).toString(),E=await fetch("".concat(a,"read"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(i.token)},body:JSON.stringify({version:1,payload:{paths:e,assemblySessionId:o||"",bridgeInstanceId:t||""}})});return(await E.json()).payload}catch(e){throw console.warn("Error reading file:",e),e}}},7223:(e,t,_)=>{_(71604)},7591:(e,t,_)=>{let r;_.d(t,{LK:()=>a});var n=_(86873),i=_(50249),o=_(45874);async function a(e,t,_){try{var a;let n="bridge-token-".concat(e,"-").concat(t),E=await (0,i.Jt)(n,r);if(E&&(a=E)&&Date.now()<a.expiresAtMs-o._Z)return E;let c=await _();await (0,i.yo)(n,()=>c,r);let s=await (0,i.Jt)(n,r);if(!s)throw Error("Token not found for key: ".concat(n));return s}catch(e){return(0,n.c_)(e,"Failed to get or create bridge token"),await _()}}r||(r=(0,i.y$)("factory-bridge","tokens"))},10963:(e,t,_)=>{_.d(t,{JW:()=>r.JW,K1:()=>h});var r=_(11016),n=_(86873),i=_(1176),o=_(70322),a=_(94581),E=_(70685),c=_(66353),s=_(38700),T=_(30203),u=_(95504),O=_(10005);_(40459);var N=function(e){return e.CLIENT="client",e.SERVER="server",e}({});function l(){return"client"}let d=()=>{if("server"!==l())throw Error("This function must be called from the server side")};var I=_(48899),R=_(36289);class C extends R.s{async _export(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;try{let{resourceMetrics:t}=await this.collect(),{resource:_}=t,r={resourceMetrics:{...t,resource:{..._,attributes:_.attributes}}},n=await fetch("/api/telemetry/export-metrics",{method:"POST",body:JSON.stringify(r)});if(!n.ok){if((401===n.status||409===n.status)&&e<3){let t=1e3*2**e;return await new Promise(e=>{setTimeout(()=>{e()},t)}),this._export(e+1)}throw Error("Metric export failed with status ".concat(n.status))}return n}catch(t){if(e<3){let t=1e3*2**e;return await new Promise(e=>{setTimeout(()=>{e()},t)}),this._export(e+1)}return(0,n.c_)(t,"Error during periodic metric export"),null}}async onInitialized(){this.interval=setInterval(async()=>{try{this.shouldExport&&!this.isExporting&&(this.isExporting=!0,this.shouldExport=!1,await this._export(),this.isExporting=!1)}catch(e){this.isExporting=!1,(0,n.c_)(e,"Error during periodic metric export")}},this.exportInterval)}async onForceFlush(){await this._export()}async onShutdown(){this.interval&&(0,I.clearInterval)(this.interval)}markForExport(){this.shouldExport=!0}constructor(e){super(),this.isExporting=!1,this.exportInterval=e,this.shouldExport=!1}}var S=_(26667);let A="unknown";class h{static shouldInitialize(){return!O.A.metrics.disabled}static async initialize(e){let{firestoreOrgId:t,exportInterval:_=5e3,defaultLabels:r={}}=e;if(!h.shouldInitialize()){h.metricsWarningShown||((0,n.JE)("Metrics export is disabled"),h.metricsWarningShown=!0);return}h.instance&&await h.instance.shutdownImpl(),h.instance=await h.createInstance({firestoreOrgId:t,exportInterval:_,defaultLabels:r})}static async createInstance(e){let{firestoreOrgId:t=A,exportInterval:_=5e3,defaultLabels:n={}}=e,i=l();if(i!==N.CLIENT&&i!==N.SERVER)throw Error("Unknown execution environment:",i);let o="unknown",a=null,u=null;if(i===N.CLIENT?(o="assembly-client",u=new C(_)):i===N.SERVER&&(o="assembly-server",a=await h.getServerSideExporter(t),u=new E.D({exporter:a,exportIntervalMillis:_})),!u)throw Error("Metric reader is not defined");let O=[new c.S({instrumentName:this.getMetricName(r.JW.LRI_INDEX_WORKER_INITIAL_INDEXING_DURATION),aggregation:new s.ll([3e4,6e4,3e5,6e5,12e5,18e5,24e5,3e6,36e5])}),new c.S({instrumentName:this.getMetricName(r.JW.LRI_INDEX_WORKER_INITIAL_INDEXING_DURATION_PER_GB),aggregation:new s.ll([15e3,3e4,6e4,12e4,18e4,24e4,3e5,6e5,12e5,14e5,18e5,24e5,3e6,36e5])}),new c.S({instrumentName:this.getMetricName(r.JW.LRI_INDEX_WORKER_CONTINUOUS_INDEXING_DURATION),aggregation:new s.ll([5e3,1e4,3e4,6e4,3e5,6e5])}),new c.S({instrumentName:this.getMetricName(r.JW.LRI_GENERATE_PROJECT_OVERVIEW_DURATION),aggregation:new s.ll([5e3,1e4,3e4,6e4,3e5,6e5])}),new c.S({instrumentName:this.getMetricName(r.JW.LRI_INDEX_FILE_CHUNKS_TOTAL_COMPUTE_EMBEDDING_DURATION),aggregation:new s.ll([5e3,1e4,3e4,6e4,12e4,18e4,24e4,3e5,6e5])})],d=new T.r({views:O,readers:[u]}).getMeter(o);return new h(u,a,d,n)}static async getServerSideExporter(e){var t;if(d(),!e)throw Error("No Firestore org ID provided");let _="".concat(S.Vf,"/v1/metrics"),r=null===(t=await (0,i.r4)(e))||void 0===t?void 0:t.ORG_TOKEN;if(e===A)return null;if(!r)throw Error("No API key found for org ID, cannot export OpenTelemetry metrics");return new a.r({url:_,headers:{"org-id":e,"X-Api-Key":null!=r?r:"","endpoint-type":"metrics"},concurrencyLimit:1})}getCounter(e){let t=h.getMetricName(e);return e in this.counters||(this.counters[e]=this.meter.createCounter(t,{description:"Counter for ".concat(e),unit:"1"})),this.counters[e]}getGauge(e){if(!(e in this.gauges)){let t=h.getMetricName(e);this.gauges[e]=this.meter.createGauge(t,{description:"Gauge for ".concat(e),unit:"1"})}return this.gauges[e]}createHistogram(e){let t=h.getMetricName(e);return e in this.histograms||(this.histograms[e]=this.meter.createHistogram(t,{description:"Histogram for ".concat(e),unit:"1"})),this.histograms[e]}static getMetricName(e){return"".concat("factory_assembly_").concat(e)}static getHistogramKey(e,t){return"".concat(e,"_").concat(JSON.stringify(t))}addToCounterImpl(e,t){let _=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r={...this.defaultLabels,..._},n=this.getCounter(e);n.add(0,r),l()===N.CLIENT&&this.metricReader.markForExport();let i=(0,u.A)();this.metricUpdates[i]=(0,o.y)(7e3).then(()=>{n.add(t,r),delete this.metricUpdates[i],l()===N.CLIENT&&this.metricReader.markForExport()})}static addToCounter(e,t){let _=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=h.instance;r&&r.addToCounterImpl(e,t,_)}setGaugeImpl(e,t){let _=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=this.getGauge(e),n={...this.defaultLabels,..._};r.record(t,n),l()===N.CLIENT&&this.metricReader.markForExport()}static setGauge(e,t){let _=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=h.instance;r&&r.setGaugeImpl(e,t,_)}recordHistogramImpl(e,t){let _=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r={...this.defaultLabels,..._},n=this.createHistogram(e),i=h.getHistogramKey(e,r);i in this.initializedHistograms||(n.record(0,r),this.initializedHistograms.add(i));let a=(0,u.A)();this.metricUpdates[a]=(0,o.y)(7e3).then(()=>{n.record(t,r),delete this.metricUpdates[a],l()===N.CLIENT&&this.metricReader.markForExport()}),l()===N.CLIENT&&this.metricReader.markForExport()}static recordHistogram(e,t){let _=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=h.instance;r&&r.recordHistogramImpl(e,t,_)}async exportMetricsImpl(e){var t;d(),await (null===(t=this.metricExporter)||void 0===t?void 0:t.export(e,()=>{}))}static async exportMetrics(e){d();let t=h.instance;if(t)return t.exportMetricsImpl(e)}async flushImpl(){if(this.isShuttingDown)return!1;try{switch(l()){case N.SERVER:if(!this.metricExporter)throw Error("No metric exporter");return await Promise.all(Object.values(this.metricUpdates)),await this.metricExporter.forceFlush(),!0;case N.CLIENT:return await this.metricReader.forceFlush(),!0;default:return!1}}catch(e){return(0,n.vV)("Error flushing OpenTelemetry metrics:",e),!1}}static async flush(){let e=h.instance;return!!e&&await e.flushImpl()}async shutdownImpl(){if(this.isShuttingDown)return!1;this.isShuttingDown=!0;try{switch(l()){case N.SERVER:if(!this.metricReader)return!1;if(!this.metricExporter)throw Error("No metric exporter");return this.metricExporter.shutdown().catch(()=>{}),!0;case N.CLIENT:if(!this.metricReader)return!1;return this.metricReader.shutdown().catch(()=>{}),!0;default:return!1}}catch(e){return(0,n.JE)(e,"Error shutting down OpenTelemetry metrics"),!1}}static async shutdown(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=h.instance;return!!t&&(e||await t.flushImpl(),await t.shutdownImpl())}constructor(e,t,_,r){this.isShuttingDown=!1,this.metricReader=e,this.metricExporter=t,this.meter=_,this.defaultLabels=r,this.counters={},this.gauges={},this.histograms={},this.metricUpdates={},this.initializedHistograms=new Set}}h.instance=null,h.metricsWarningShown=!1;_(4019)},11016:(e,t,_)=>{_.d(t,{JW:()=>r});var r=function(e){return e.CODEBASE_SEARCH_COUNT="codebase_search_count",e.LFS_ADD_REPO_SUCCESS_COUNT="lfs_add_repo_success_count",e.LFS_ADD_REPO_FAILURE_COUNT="lfs_add_repo_failure_count",e.LFS_REPO_TOTAL_SIZE_BYTES="lfs_total_size_bytes",e.LFS_TOKENIZE_REPO_SUCCESS_COUNT="lfs_tokenize_repo_success_count",e.LFS_TOKENIZE_REPO_FAILURE_COUNT="lfs_tokenize_repo_failure_count",e.LFS_REPO_TOTAL_TOKENS="lfs_total_tokens",e.LFS_SAVE_TO_LOCAL_SUCCESS_COUNT="lfs_save_to_local_success_count",e.LFS_SAVE_TO_LOCAL_FAILURE_COUNT="lfs_save_to_local_failure_count",e.LRI_INDEX_FILE_CHUNKS_COMPUTE_EMBEDDING_TOKEN_COUNT="lri_index_file_chunks_compute_embedding_token_count",e.LRI_INDEX_FILE_CHUNKS_ALL_RETRY_ERROR_COUNT="lri_index_file_chunks_all_retry_error_count",e.LRI_INDEX_FILE_CHUNKS_REPO_SIZE_EXCEEDED_COUNT="lri_index_file_chunks_repo_size_exceeded_count",e.LRI_PROJECT_OVERVIEW_ALL_RETRY_ERROR_COUNT="lri_project_overview_all_retry_error_count",e.DYNAMIC_CONTEXT_AT_COMMAND_COUNT="dynamic_context_at_command_count",e.DYNAMIC_CONTEXT_AT_COMMAND_FAILURE_COUNT="dynamic_context_at_command_failure_count",e.DYNAMIC_CONTEXT_SEARCH_FALLBACK_COUNT="dynamic_context_search_fallback_count",e.DYNAMIC_CONTEXT_WEAVIATE_SEARCH_FAILURE_COUNT="dynamic_context_weaviate_search_failure_count",e.CONTEXT_SUMMARY_RETRIEVAL_FAILURES_COUNT="context_summary_retrieval_failures_count",e.HYPERCODE_SET_REPO_INDEX_STATE_COUNT="hypercode_set_repo_index_state_count",e.ZOEKT_SET_REPO_INDEX_STATE_COUNT="zoekt_set_repo_index_state_count",e.SEARCH_SET_REPO_INDEX_STATE_COUNT="search_set_repo_index_state_count",e.OVERVIEW_SET_REPO_INDEX_STATE_COUNT="overview_set_repo_index_state_count",e.SUMMARIES_SET_REPO_INDEX_STATE_COUNT="summaries_set_repo_index_state_count",e.GOOGLE_DRIVE_REFRESH_TOKEN_SUCCESS_COUNT="google_drive_refresh_token_success_count",e.GOOGLE_DRIVE_REFRESH_TOKEN_FAILURE_COUNT="google_drive_refresh_token_failure_count",e.LANDING_PAGE_VISIT_COUNT="landing_page_visit_count",e.INTEGRATION_CONTEXT_CREATED_SUCCESS_COUNT="integration_context_created_success_count",e.INTEGRATION_CONTEXT_CREATED_FAILURE_COUNT="integration_context_created_failure_count",e.WORKFLOW_SESSION_CREATE_COUNT="workflow_session_create_count",e.THREAD_SESSION_CREATE_SUCCESS_COUNT="thread_session_create_success_count",e.THREAD_SESSION_CREATE_FAILURE_COUNT="thread_session_create_failure_count",e.AT_MENU_OPEN_COUNT="at_menu_open_count",e.AT_MENU_EXIT_COUNT="at_menu_exit_count",e.AT_MENU_ACCEPT_ITEM_COUNT="at_menu_accept_item_count",e.AT_MENU_ACCEPT_INITIAL_SUGGESTION_COUNT="at_menu_accept_initial_suggestion_count",e.MESSAGE_SENT_COUNT="message_sent_count",e.MESSAGE_EDITED_COUNT="message_edited_count",e.CHAT_SUCCESS_COUNT="chat_success_count",e.CHAT_FAILURE_COUNT="chat_failure_count",e.CHAT_ERROR_THROWN_COUNT="chat_error_thrown_count",e.CONVERSATION_COMPACTION_COUNT="conversation_compaction_count",e.DROID_MODE_TOOL_ACCEPT_COUNT="droid_mode_tool_accept_count",e.DROID_MODE_TOOL_REJECT_COUNT="droid_mode_tool_reject_count",e.DROID_MODE_TOOL_SUCCESS_COUNT="droid_mode_tool_success_count",e.DROID_MODE_TOOL_ERROR_COUNT="droid_mode_tool_error_count",e.DROID_MODE_TOOL_CONFIRMATION_COUNT="droid_mode_tool_confirmation_count",e.DROID_MODE_TOOL_EXECUTION_COUNT="droid_mode_tool_execution_count",e.DROID_MODE_TOOL_SERVER_EXECUTION_API_SUCCESS_COUNT="droid_mode_tool_server_tool_execution_api_success_count",e.DROID_MODE_TOOL_SERVER_EXECUTION_API_ERROR_COUNT="droid_mode_tool_server_tool_execution_api_error_count",e.DROID_MODE_FILE_GENERATE_API_SUCCESS_COUNT="droid_mode_file_generate_api_success_count",e.DROID_MODE_FILE_GENERATE_API_ERROR_COUNT="droid_mode_file_generate_api_error_count",e.CODEBASE_SEARCH_LATENCY="codebase_search_latency",e.LFS_CREATE_REPO_LATENCY="lfs_create_repo_latency",e.LFS_TOKENIZE_REPO_LATENCY="lfs_tokenize_repo_latency",e.LRI_INDEX_WORKER_INITIAL_INDEXING_DURATION="lri_index_worker_initial_indexing_duration",e.LRI_INDEX_WORKER_INITIAL_INDEXING_DURATION_PER_GB="lri_index_worker_initial_indexing_duration_per_gb",e.LRI_INDEX_WORKER_CONTINUOUS_INDEXING_DURATION="lri_index_worker_continuous_indexing_duration",e.LRI_INDEX_FILE_CHUNKS_DURATION="lri_index_file_chunks_duration",e.LRI_DELETE_FILE_CHUNKS_DURATION="lri_delete_file_chunks_duration",e.LRI_GENERATE_PROJECT_OVERVIEW_DURATION="lri_generate_project_overview_duration",e.LRI_INDEX_FILE_CHUNKS_TOTAL_COMPUTE_EMBEDDING_DURATION="lri_index_file_chunks_total_compute_embedding_duration",e.DYNAMIC_CONTEXT_SEARCH_RETRY_COUNT="dynamic_context_search_retry_count",e.DYNAMIC_CONTEXT_SEARCH_HYPERCODE_NUM_RETRIEVED_CHUNKS="dynamic_context_search_hypercode_num_retrieved_chunks",e.DYNAMIC_CONTEXT_SEARCH_HYPERCODE_NUM_RETRIEVED_FILES="dynamic_context_search_hypercode_num_retrieved_files",e.DYNAMIC_CONTEXT_SEARCH_NUM_RERANKED_FILES="dynamic_context_search_num_reranked_files",e.DYNAMIC_CONTEXT_SEARCH_NUM_RETRIEVED_FILES="dynamic_context_search_num_retrieved_files",e.DYNAMIC_CONTEXT_SEARCH_ZOEKT_FILE_CONTENTS_FAILURE_COUNT="dynamic_context_search_zoekt_file_contents_failure_count",e.DYNAMIC_CONTEXT_AT_COMMAND_LATENCY="dynamic_context_at_command_latency",e.DYNAMIC_CONTEXT_AT_COMMAND_REMOVED_CONTEXTS="dynamic_context_at_command_removed_contexts",e.DYNAMIC_CONTEXT_AT_COMMAND_NEW_CONTEXTS="dynamic_context_at_command_new_contexts",e.DYNAMIC_CONTEXT_AT_COMMAND_ERRORS="dynamic_context_at_command_errors",e.DYNAMIC_CONTEXT_LOCAL_REPO_SEARCH_NUM_FILES="dynamic_context_local_repo_search_num_files",e.DYNAMIC_CONTEXT_AT_COMMAND_NOOP_COUNT="dynamic_context_at_command_noop_count",e.CHAT_TOKEN_USAGE_COUNT="chat_token_usage_count",e.CHAT_RESPONSE_TOKEN_COUNT="chat_response_token_count",e.CHAT_EMPTY_STATE_SUGGESTION_CLICKED="chat_empty_state_suggestion_clicked",e.CHAT_EMPTY_STATE_QUERY_GENERATION_LATENCY="chat_empty_state_query_generation_latency",e.CHAT_EMPTY_STATE_QUERY_GENERATED="chat_empty_state_query_generated",e.CHAT_CLIENT_TIME_TO_FIRST_TOKEN="chat_client_time_to_first_token",e.CONVERSATION_COMPACTION_INPUT_TOKENS="conversation_compaction_input_tokens",e.CONVERSATION_COMPACTION_OUTPUT_TOKENS="conversation_compaction_output_tokens",e.CONVERSATION_COMPACTION_DURATION="conversation_compaction_duration",e.AT_MENU_NUMBER_OF_FILTERED_ITEMS="at_menu_number_of_filtered_items",e.AT_MENU_NUMBER_OF_INITIAL_SUGGESTIONS="at_menu_number_of_initial_suggestions",e.DROID_MODE_TOOL_EXECUTION_LATENCY="droid_mode_tool_execution_latency",e.CODEBASE_EXPLORER_AVAILABLE_REPOS="codebase_explorer_available_repos",e.CODEBASE_EXPLORER_SELECTABLE_REPOS="codebase_explorer_selectable_repos",e.CODEBASE_EXPLORER_INDEXING_REPOS="codebase_explorer_indexing_repos",e}({})},12369:(e,t,_)=>{_.d(t,{d:()=>o});var r=_(69799);_(40459).env.AWS_SDK_JS_SUPPRESS_MAINTENANCE_MODE_MESSAGE="1";let{aws:{accessKey:n,secretAccessKey:i}}=r.A,o={apiVersion:"latest",region:"us-west-1",credentials:{accessKeyId:n,secretAccessKey:i}}},14573:(e,t,_)=>{_.d(t,{a:()=>r});let r="___"},26667:(e,t,_)=>{_.d(t,{Vf:()=>n});let{app:{environment:r}}=_(10005).A,n="production"===r?"https://metrics.factory.ai":"https://metrics-dev.factory.ai"},38040:()=>{var e=function(e){return e.DIRECTORY="DIRECTORY",e.FILE="FILE",e}(e||{})},45874:(e,t,_)=>{_.d(t,{MJ:()=>o,_Z:()=>i,bf:()=>n,uM:()=>r});let r=_(10005).A.bridge.port,n="/api/fs/",i=3e4,o=5},63665:(e,t,_)=>{_.d(t,{L5:()=>n});var r=_(70322);function n(e){let{retries:t=3,delay:_=250,exponentialBackoff:n=!1,backoffFactor:i=2,jitter:o=!1,onRetry:a,onSuccess:E,onAllError:c,isRetryableError:s}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return async function(){for(var T=arguments.length,u=Array(T),O=0;O<T;O++)u[O]=arguments[O];let N=0,l=Error("No error captured");for(;N<t;){try{let t=await e(...u);return E&&E(N),t}catch(e){if(l=e instanceof Error?e:Error(String(e)),N+=1,s&&!s(l))break;a&&a(l,N)}let t=n?_*i**N:_,c=o?Math.random()*t:t;await (0,r.y)(c)}if(c)return c(l);throw l}}},68617:(e,t,_)=>{_.d(t,{m:()=>r});class r extends Error{constructor(e){super(e),this.name="BridgeError",Object.setPrototypeOf(this,r.prototype)}}},70322:(e,t,_)=>{_.d(t,{y:()=>r});function r(e){return new Promise(t=>{setTimeout(t,e)})}},91161:(e,t,_)=>{_.d(t,{I:()=>E});var r=_(86873),n=_(2076),i=_(45874),o=_(7591),a=_(78264);async function E(e){let{sessionId:t,bridgeInstanceId:_,pairingCode:E}=e;try{let e=async()=>{let e=(await (0,a.w)({sessionId:t,bridgeInstanceId:_,pairingCode:E})).token,r=n.i(e),o=r.exp?1e3*r.exp:Date.now()+6e4*i.MJ;return{token:e,expiresAtMs:o}};return{token:(await (0,o.LK)(_,t,e)).token}}catch(e){return(0,r.c_)(e,"Error getting or generating bridge token:"),await (0,a.w)({sessionId:t,bridgeInstanceId:_,pairingCode:E})}}}}]);